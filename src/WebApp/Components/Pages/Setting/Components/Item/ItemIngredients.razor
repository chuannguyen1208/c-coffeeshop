@inject IIngredientService ingredientService
@inject IItemService itemService

@foreach (var itemIngredient in itemIngredients)
{
    <div class="row mb-3">
        <div class="col-6">
            <select class="form-select" aria-label="Default select example" place @bind="@itemIngredient.IngredientId">
                <option selected>Open this select menu</option>
                @foreach (var ingredient in ingredients)
                {
                    <option value="@ingredient.Id" class="p-3">@ingredient.Name</option>
                }
            </select>
        </div>
        <div class="col">
            <input class="form-control" type="text" @bind-value="@itemIngredient.QuantityRequired" />
        </div>
        <div class="col">
            <btn class="btn btn-light" @onclick="() => itemIngredients.Remove(itemIngredient)">
                <i class="bi bi-trash"></i>
            </btn>
        </div>
    </div>
}

<button class="btn btn-light btn-sm" @onclick="AddItemIngredient" @onclick:preventDefault>
    <i class="bi bi-plus-circle"></i>
</button>

@code {
    private IEnumerable<IngredientDto> ingredients = [];

    [Parameter]
    public int ItemId { get; set; }
    public List<ItemIngredientDto> itemIngredients = [];

    protected override async Task OnInitializedAsync()
    {
        ingredients = await ingredientService.GetIngredients();

        if (ItemId != 0)
        {
            var itemIngredientsEnumerable = await itemService.GetItemsIngredients(ItemId);
            itemIngredients = itemIngredientsEnumerable.ToList();
        }
    }

    void AddItemIngredient()
    {
        itemIngredients.Add(new ItemIngredientDto
            {
                IngredientId = 0,
                ItemId = ItemId,
                QuantityRequired = 0
            });
    }
}
