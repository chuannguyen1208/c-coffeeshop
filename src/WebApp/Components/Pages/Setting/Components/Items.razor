@rendermode InteractiveServer
@inject IItemService itemService

<div class="">
    <div>
        <a href="settings/item" class="btn btn-primary rounded-pill btn-sm">Create Item</a>
    </div>
    <ul class="list-group mt-2">
        @foreach (var item in items)
        {
            <li class="list-group-item mb-1">
                <div class="d-flex justify-content-between">
                    <div>
                        <img src="@(item.ImgBase64 ?? item.Img ?? "img/coffee.jpg")" width="35" />
                        @item.Name - @($"{item.Price}$")
                    </div>
                    <div>
                        <a href="settings/item/@item.Id" class="btn btn-sm">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <button class="btn btn-sm">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>

@code {
    IEnumerable<ItemDto> items = [];

    protected override async Task OnInitializedAsync()
    {
        items = await itemService.GetItems();
    }
}
